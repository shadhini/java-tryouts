Factory / Factory Method Pattern
===========================================
define an interface or abstract class for creating an object
but let the subclasses decide which class to instantiate.
In other words, subclasses are responsible to create the instance of the class.

The Factory Method Pattern is also known as Virtual Constructor.


Advantage
-----------
* Factory Method Pattern allows the sub-classes to choose the type of objects to create.
* It promotes the loose-coupling by eliminating the need to bind application-specific classes into the code.
That means the code interacts solely with the resultant interface or abstract class,
so that it will work with any classes that implement that interface or that extends that abstract class.


Usage
----------
* When a class doesn't know what sub-classes will be required to create
* When a class wants that its sub-classes specify the objects to be created.
* When the parent classes choose the creation of objects to its sub-classes.

e.g. : Calculate Electricity Bill
Step 1: Create a Plan abstract class.
Step 2: Create the concrete classes that extends Plan abstract class.
Step 3: Create a GetPlanFactory to generate object of concrete classes based on given information..
Step 4: Generate Bill by using the GetPlanFactory to get the object of concrete classes by passing an information
such as type of plan DOMESTICPLAN or COMMERCIALPLAN or INSTITUTIONALPLAN.




